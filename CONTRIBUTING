CONTRIBUTING
============

This document outlines how to contribute to this sadistic repository.

REQUIREMENTS
------------

-   Build Tools for .NET 4.6.1
-   Visual Studio 2017/2017/2019
-   Git w/ GitHub account for PRs
-   Installation of HCE & SPV3 

FORMATTING
----------

-   two spaces for indentation
-   vertically align everything

CONTRIBUTING
------------

1.  fork the github repository to your github account
2.  clone your fork to your local development environment
3.  carry out your hacks and commit them to your fork
4.  create a pull request on the official fork repository

STRUCTURE
---------

The repository comprises of the following top-level directories:

  directory   description
  ----------- -------------------------------------------
  bin         compiled binaries and assets
  doc         documentation for the spv3 loader
  drp         discord rich presence source code
  hxe         hxe kernel source tree (read below)
  src         source code for the spv3 loader ui
  xcf         gimp project files for loader backgrounds

HXE

The hxe directory contains the source code for the HXE kernel, which is
the "core" of the SPV3 loader and handles its loading routines, campaign
resuming, video patches, post-processing settings and all of the fancy
under-the-hood stuff.

In essence, it's where the main magic and documentation is present. Its
tree is split into the following top-level directories:

  directory   description
  ----------- -------------------------------------------------
  bin         compiled hxe kernel binaries and assets
  doc         documentation for low-level spv3 & hxe concepts
  src         source code for the hxe kernel

ARCHITECTURE
------------

At the highest level, the SPV3 UI is a graphical abstraction on top of
HXE: it configures and invokes the HXE kernel to load SPV3 based on the
user's settings.

The SPV3 project follows the MVVM paradigm (which is the WPF equivalent
of the MVC paradigm), especially in the Configuration section.

Both the top-level and HXE doc directories go into further detail about
the overall system and each component within it.
